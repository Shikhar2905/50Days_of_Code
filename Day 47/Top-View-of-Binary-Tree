

//User function Template for Java

/*
class Node{
    int data;
    Node left;
    Node right;
    Node(int data){
        this.data = data;
        left=null;
        right=null;
    }
}
*/

class Solution
{
    static class Info{
        int hd;                                     // Horizontal Diameter
        Node node;
        public Info(int hd, Node node){
            this.hd = hd;
            this.node = node;
        }
    }
    
    static ArrayList<Integer> topView(Node root)
    {
        HashMap<Integer, Node> map = new HashMap<>();
        int min = 0, max = 0;
        Queue<Info> q = new LinkedList<>();
        q.add(new Info(0, root));
        q.add(null);
        
        while(! q.isEmpty()){
            Info curr = q.remove();
            
            if( (curr != null) && (! map.containsKey(curr.hd)) ){
                map.put(curr.hd, curr.node);
            } 
            
            if(curr == null){
                if(! q.isEmpty()){
                    q.add(null);
                }   
            }else{
                if(curr.node.left != null){
                    q.add(new Info(curr.hd - 1, curr.node.left));
                    min = Math.min(min, curr.hd - 1);
                }
                if(curr.node.right != null){
                    q.add(new Info(curr.hd + 1, curr.node.right));
                    max = Math.max(max, curr.hd + 1);
                }
            }
        }
        
        ArrayList<Integer> ans = new ArrayList<>();
        for(int i=min ; i<=max ; i++){
            ans.add(map.get(i).data);
        }
        
        return ans;
    }
}
