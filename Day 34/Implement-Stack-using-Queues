class MyStack {
    Queue<Integer> q1 = new LinkedList<>();
    Queue<Integer> q2 = new LinkedList<>();
    int rear = -1;

    public MyStack() {
        
    }
    
    public void push(int x) {
        q1.add(x);
        rear = x;
    }
    
    public int pop() {

        if(q1.isEmpty()){
            return -1;
        }

        while(q1.size() != 1){
            q2.add(q1.remove());
        }

        int front = q1.remove();

        while(q2.size() > 1){
            q1.add(q2.remove());
        }
        
        if(!q2.isEmpty()){
            rear = q2.remove();
            q1.add(rear);
        }
        else{
            rear = -1;
        }
 
        return front;
    }
    
    public int top() {
        return rear;
    }
    
    public boolean empty() {
        return q1.isEmpty();
    }
}

/**
 * Your MyStack object will be instantiated and called as such:
 * MyStack obj = new MyStack();
 * obj.push(x);
 * int param_2 = obj.pop();
 * int param_3 = obj.top();
 * boolean param_4 = obj.empty();
 */
